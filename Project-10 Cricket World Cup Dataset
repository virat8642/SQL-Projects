select * from batsman;
select * from bowler;
select * from "ODI_Results";

copy public."batsman" from 'C:\download\course softwares\DATASETS\Cricket world cup\Batsman.csv' delimiter ',' csv header;
copy public."bowler" from 'C:\download\course softwares\DATASETS\Cricket world cup\Bowler.csv' delimiter ',' csv header;
copy public."ODI_Results" from 'C:\download\course softwares\DATASETS\Cricket world cup\ODIResults.csv' delimiter ',' csv header;

-- Total ODI Results from Bangladesh and England countries from ODI Results table --

select * from "ODI_Results" where "Country" in('Bangladesh','England');

-- Total ODI Results where country ID is between 1 to 10 from ODI Results table --

select * from "ODI_Results" where "Country_ID" between 1 and 10;

-- Total ODI Results where country ID is not between 1 to 10 from ODI Results table --

select * from "ODI_Results" where "Country_ID" not between 1 and 10;

-- Total number of batsman where Player ID is between 5000 to 10000 from batsman table --

select * from batsman where "Player_ID" between 5000 and 10000;

-- Total number of batsman whose name starts from H from batsman table --

select * from batsman where "Batsman" like 'H%';

-- Total number of batsman whose name contain Ra from batsman table --

select * from batsman where "Batsman" like '%Ra%';

-- Total numbers of bastman whose first name contain only 4 characters from bastman table --

select * from batsman where "Batsman" like '_____ %';

-- Total numbers of bastman from Dublin city order by match ID from bastman table --

select * from batsman where "City" = 'Dublin' order by "Match_ID";

-- Total numbers of bastman from Dublin city order by match ID in descending order from bastman table --

select * from batsman where "City" = 'Dublin' order by "Match_ID" desc;

-- Total numbers of bastman from all cities in ascending order and match ID in descending order from batsman table --

select * from batsman order by "City" asc,"Match_ID" desc;

-- Total numbers of bastman in ascending order by column number 2 from bastman table --

select * from batsman order by 2 asc;

-- Total numbers of bastman by player ID in descending order --

select * from batsman order by "Player_ID" desc;

-- Top 10 bastman whose player ID is greater than 100000 in descending order from bastman table --

select * from batsman where "Player_ID">100000 order by "Player_ID" desc limit 10;

-- Top 20 bastman whose player ID is greater than 100000 in ascending order from bastman table --

select * from batsman where "Player_ID">100000 order by "Player_ID" asc limit 20;

-- Renaming the column using AS keyword --

select "Batsman" as "Batsman Name","City" as "Match City","Opposition" as "Opponent" from batsman;

-- Total count of bastman from batsman table --

select count(*) from batsman;

-- Total number of 4s and 6s from batsman table for a particular player ID--

select count("4s") as "No_of_4s",count("6s") as "No_of_6s" from batsman where "Player_ID"='24598';

-- Total 6s from batsman table --

select sum("6s") as "Total_6s" from batsman;

-- Total 4s from batsman table for a particular bastman --

select sum("4s") as "Total_4s" from batsman where "Batsman" = 'Jason Roy';

-- Average overs from bowler table --

select avg("Overs") as "Average Overs" from bowler;

-- Minimum wickets from bowler table for a particular player ID --

select min("Wickets") as "Min Wickets" from bowler where "Player_ID"='326016';

-- Maximum wickets from bowler table for a particular player ID --

select max("Wickets") as "Max Wickets" from bowler where "Player_ID"='326016';

select * from batsman;
select * from bowler;
select * from "ODI_Results";

-- Total number of matches group by country from ODI Results table --

select "Country",count("Match_ID") as "No_of_Matches" from "ODI_Results" group by "Country";

-- Total number of matches group by city order by total matches from ODI Results table --

select "City",count("Match_ID") as "Total Matches" from "ODI_Results" group by "City" order by "Total Matches" desc;

select "Player_ID",max("4s") as "Max_4s",max("6s") as "Max_6s",sum("4s") as "Total_4s",sum("6s") as "Total_6s" 
from batsman group by "Player_ID" order by "Total_6s";

select "Country",count("Match_ID") as "No_of_Matches" from "ODI_Results" group by "Country" having count("Match_ID")>200;
select * , case when "6s"< 5 then 'Low Sixes' when "6s" between 5 and 10 then 'Medium Sixes' else 'High Sixes' 
end as "Sixes Category" from batsman;

select * from batsman;
select * from bowler;
select * from "ODI_Results";

select a."Match_ID",a."Batsman",a."Player_ID",a."6s",b."Country_ID",b."Country"
from batsman as a inner join "ODI_Results" as b on a."Match_ID"=b."Match_ID" order by "Match_ID";

select a."Match_ID",a."Batsman",a."Player_ID",a."6s",b."Country_ID",b."Country"
from batsman as a left join "ODI_Results" as b on a."Match_ID"=b."Match_ID" order by "Match_ID";

select a."Match_ID",a."Batsman",a."Player_ID",a."6s",b."Country_ID",b."Country"
from batsman as a right join "ODI_Results" as b on a."Match_ID"=b."Match_ID" order by "Match_ID";

select a."Match_ID",a."Batsman",a."Player_ID",a."6s",b."Country_ID",b."Country",b."Match_ID"
from batsman as a full join "ODI_Results" as b on a."Match_ID"=b."Match_ID" order by a."Match_ID",b."Match_ID";

select "Match_ID" from batsman except select "Match_ID" from "ODI_Results" order by "Match_ID";
select "Match_ID" from batsman union select "Match_ID" from "ODI_Results" order by "Match_ID";

select * from "ODI_Results" where "Match_ID" in (select "Match_ID" from batsman where "Match_ID">'100000');

select a."Bowler",a."Match_ID",a."Overs",b."Margins" from bowler as a left join
(select "Match_ID" from "ODI_Results" group by "Match_ID") as b on a."Match_ID"=b."Match_ID";

select "Match_ID","Country",(select "Bowler" from bowler where "ODI_Results"."Match_ID" = bowler."Match_ID") from "ODI_Results";
select "Batsman", length("Batsman") as characters from batsman;
select "Player_ID"||' - '||"Batsman" as "Player_Full_ID" from batsman;

select "Player_ID","Batsman",substring("Batsman" for 1) as "Batsman_Name_Group" from batsman
where substring("Batsman" for 1)='D';

explain select * from batsman;
explain select distinct * from batsman;

create schema test;
create table test.batsman as select * from batsman;
