select * from bank;

copy public."bank" from 'C:\download\course softwares\DATASETS\Bank Customers.csv' delimiter ',' csv header;

select * from bank where "Region" in ('Scotland','Wales');
select * from bank where "Age" between 20 and 40;
select * from bank where "Age" not between 20 and 40;

select * from bank where "First Name" like 'We%';
select * from bank where "Last Name" like '%rr%';
select * from bank where "First Name" like '____%';

select distinct "First Name" from bank where "First Name" not like 'A%';
select * from bank where "Gender"='Male' order by "Customer ID";
select * from bank where "Gender"='Male' order by "Customer ID" desc;
select * from bank order by "First Name" asc , "Last Name" desc;

select * from bank order by 2 asc;
select * from bank order by "Age" desc;
select * from bank where "Balance">20000 order by "Balance" desc limit 10;
select * from bank where "Balance">20000 order by "Balance" asc limit 20;

select "Customer ID" as "C_ID", "First Name" as "Customer Name", "Job Classification" as "Job Type" from bank;
select count(*) from bank;
select count("First Name") as "No of Customers",count("Region") as "No of Regions" from bank where "Region"='England';

select sum("Balance") as "Total Balance" from bank where "Job Classification"='White Collar';
select avg("Balance") as "Avg Balance" from bank where "Job Classification"='White Collar';
select min("Balance") as "Min Balance" from bank where "Age" between 20 and 50;
select max("Balance") as "Max Balance" from bank where "Age" between 20 and 50;

select * from bank;
select "Customer ID",count("First Name") as "No of Customers" from bank group by "Customer ID";
select "Region",sum("Balance") as "Total Balance" from bank group by "Region" order by "Total Balance" desc;

select "Job Classification",min("Balance") as "Min Balance",max("Balance") as "Max Balance",sum("Balance") as "Total Balance"
from bank group by "Job Classification" order by "Total Balance";
select "Job Classification",count("First Name") as "No of Customers" from bank group by "Job Classification" having count("First Name")>20;

select *, case when "Balance"<50000 then 'Low Balance Account' when "Balance" between 50000 and 100000 then 'Mid Balance Account' 
else 'High Balance Account' end as "Balance Category" from bank;
select "First Name","Gender",replace("Gender",'Male','M')as "New Gender Category" from bank;
select "First Name","Customer ID",substring("First Name" for 2 ) as "Name Category" from bank where substring("First Name" for 2 ) = 'Ka';
select "First Name",string_agg("Last Name",' ') from bank group by "First Name" order by "First Name";

select * from bank where "First Name" ~* '^a+[a-z\s]+$';
select * from bank where "First Name" ~* '^(a|b|c|d)+[a-z\s]+$';
select * from bank where "First Name" ~* '^(a|b|c|d)[a-z]{3}\s[a-z]{4}';

select "Balance", 'Total Balance is'||to_char("Balance",'9999999.99') as message from bank;
explain select * from bank;
explain select distinct * from bank; 
create schema test;
create table test.bank as select * from bank;
