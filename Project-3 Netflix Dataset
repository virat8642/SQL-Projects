select * from netflix;

copy public."netflix" from 'C:\download\course softwares\DATASETS\Netflix.csv' delimiter ',' csv header encoding 'windows-1251';

-- Total number of titles in Documentaries and Thrillers genre --

select * from netflix where "Genres" in('Documentaries','Thrillers');

-- Total number of titles from 1 to 100 --

select * from netflix where "S.No" between 1 and 100;

-- Total number of titles where serial number is not between 1 to 100 --

select * from netflix where "S.No" not between 1 and 100;

-- Total number of titles whose name starts with P --

select * from netflix where "Title" like 'P%';

-- Total number of titles whose name contain 'the' --

select * from netflix where "Title" like '%the%';

-- Total number of titles whose first name contain only 4 characters --

select * from netflix where "Title" like '_____ %';

-- Total number of series from PG-13 order by serial number --

select * from netflix where "Series" = 'PG-13' order by "S.No";

-- Total number of series from series 'PG-13' order by serial number in descending order --

select * from netflix where "Series" = 'PG-13' order by "S.No" desc;

-- Total number of titles order by genre in ascending order and title in descending order --

select * from netflix order by "Genres" asc , "Title" desc;

-- Total number of titles order by column name 2 in ascending order --

select * from netflix order by 2 asc;

-- Total number of titles order by year in descending order --

select * from netflix order by "Year" desc;

-- Top 10 titles after year 2006 in descending order --

select * from netflix where "Year">'2006' order by "Year" desc limit 10;

-- Top 20 titles after year 2010 in ascending order --

select * from netflix where "Year">'2006' order by "Year" asc limit 20;

--Renaming the column using AS keyword --

select "S.No" as "Rank","Title" as "Name","Year" as "Release_Year" from netflix; 

-- Total count of titles --

select count(*)from netflix;

-- Total number of titles across total number of unique series of a particular title --

select count("Title") as "No_of_Titles",count(distinct "Series") as "N0_of_Series" from netflix where "Title"='Delhi Crime';

-- Total ratings of series 'TV-MA' --

select sum("Rating") as "Total_Ratings" from netflix where "Series"='TV-MA';

-- Average ratings of series 'R' --

select avg("Rating") as "Average_Ratings" from netflix where "Series"='R';

-- Minimum ratings of titles from year 2000 to 2010 --

select min("Rating") as "Min_Ratings" from netflix where "Year" between '2000' and '2010';

-- Maximum ratings of titles from year 2000 to 2010 --

select max("Rating") as "Max_Ratings" from netflix where "Year" between '2000' and '2010';

select * from netflix;

-- Total number of titles group by Director --

select "Director",count("S.No") as "No_of_Titles" from netflix group by "Director";

-- Total ratings group by year order by total ratings in descending order --

select "Year",sum("Rating") as "Total_Ratings" from netflix group by "Year" order by "Total_Ratings" desc;

-- Minimum ratings, maximum ratings and total ratings group by genres --

select "Genres",min("Rating") as "Min_Ratings", max("Rating") as "Max_Ratings", sum("Rating") as "Total_Ratings" 
from netflix group by "Genres" order by "Total_Ratings";

-- Total number of titles group by genre having rank greater than 100 --

select "Genres",count("S.No") as "Title_count" from netflix group by "Genres" having count("S.No")>100;

-- Categorizing the titles by time duration --

select * ,case when ("Duration(in Minutes)")<180 then '2 Hr Movie' when ("Duration(in Minutes)") between 180 and 240 then '3 Hr Movie'
else 'Seasons' end as "Title_Duration" from netflix;

-- Renaming the production country --

select "Title","Production Country", replace("Production Country",'Australia','AUS') as "New_Production_Country" from netflix;

-- Substring function  --

select "Series","Title",substring("Series" for 2 ) as "Series_group" from netflix where substring("Series" for 2 )='PG';

-- String aggregate function  --

select "Genres",string_agg("Director",' ,') from netflix group by "Genres" order by "Genres";

explain select * from netflix;
explain select distinct * from netflix; 

create schema test;
create table test.netflix as select * from netflix;
